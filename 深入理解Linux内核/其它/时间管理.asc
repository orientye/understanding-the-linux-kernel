:toc:
:toclevels: 5
:hardbreaks-option:

== 时间管理

=== 概念
==== 时钟硬件
▪ 实时时钟(RTC, Real-Time Clock)
    
    通常是主板上的含电池供电的CMOS时钟芯片，掉电后依然能工作，提供所谓的绝对时间。

▪ 系统时钟

    系统时钟提供相对相对时钟。

    PIT(programmable interval timer)
    https://en.wikipedia.org/wiki/Intel_8253
    https://en.wikipedia.org/wiki/Programmable_interval_timer

    TSC(Time Stamp Counter)
    https://en.wikipedia.org/wiki/Time_Stamp_Counter
    
    HPET(High Precision Event Timer)
    https://en.wikipedia.org/wiki/High_Precision_Event_Timer

▪ CPU本地时钟

    https://wiki.osdev.org/APIC_timer

实时时钟自带供电，关机后依然会工作，每次启动后，作为参照用来设置系统时钟。
系统时钟是系统的核心心跳，通常会根据主板设计从PIT，TSC以及HPET选择精度最高的时钟硬件来使用。
CPU本地时钟处理CPU本地相关的时间，例如进程调度所需要的时间支持。

==== 定时器实现原理
程序上的定时器最终依赖硬件定时器来实现, 内核在时钟中断发生后检测各定时器是否到期
时钟中断处理程序会唤起TIMER_SOFTIRQ软中断, 运行当前处理器上到期的所有定时器
到期后的定时器处理函数将作为软中断在底半部执行

低分辨率定时器/经典定时器: 经典分辨率为4毫秒 定时轮(timer wheel)实现
高分辨率定时器: 编译选项HIG_RES_TIMERS 红黑树实现

=== 时间表示

=== 低分辨率定时器

=== 通用时间子系统

=== 高分辨率定时器

参考: https://github.com/torvalds/linux/tree/master/Documentation/timers/hrtimers.rst

=== 动态时钟

=== 广播模式

=== 管理进程时间
update_process_times函数: https://github.com/torvalds/linux/tree/master/kernel/time/timer.c

=== 时钟中断
https://elixir.bootlin.com/linux/latest/source/kernel/time/tick-common.c
tick_periodic

https://elixir.bootlin.com/linux/latest/source/arch/x86/kernel/time.c
timer_interrupt

=== 其它
- delayed_work
    周期性任务也可以用struct delayed_work来完成
    delayed_work其实是封装了工作队列和定时器:
    https://elixir.bootlin.com/linux/latest/source/include/linux/workqueue.h
    使用:
    schedule_delayed_work(struct delayed_work *dwork, unsigned long delay) 
    cancel_delayed_work(struct delayed_work *dwork);
    cancel_delayed_work_sync(struct delayed_work *dwork);

- 内核延迟
    
    ▪ 忙等延迟
        短延迟: ndelay, udelay, mdelay
        长延迟: while
    ▪ sleep延迟
        schedule_timeout()可以使当前任务休眠至指定的jiffies之后再重新被调度执行
        msleep()和msleep_interruptible()是通过包含了schedule_timeout()的
        schedule_timeout_uninterruptible()和schedule_timeout_interruptible()来实现的

=== 系统调用
SYSCALL_DEFINE:
https://elixir.bootlin.com/linux/latest/source/kernel/time/time.c
https://elixir.bootlin.com/linux/latest/source/kernel/time/hrtimer.c
https://elixir.bootlin.com/linux/latest/source/kernel/time/itimer.c
https://elixir.bootlin.com/linux/latest/source/kernel/time/posix-timers.c

=== 参考
https://lwn.net/Kernel/Index/#hrtimer
https://lwn.net/Kernel/Index/#Timekeeping
https://lwn.net/Kernel/Index/#timerfd
https://lwn.net/Kernel/Index/#Timer_frequency
https://lwn.net/Kernel/Index/#Timers
https://github.com/0xAX/linux-insides/tree/master/Timers
