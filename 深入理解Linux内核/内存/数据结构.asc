:toc:
:toclevels: 4
:hardbreaks-option:

== 数据结构

=== pglist_data
https://github.com/torvalds/linux/blob/master/include/linux/mmzone.h

▪ NUMA系统上每个NUMA节点拥有一个pg_data_t结构来描述内存布局
▪ UMA系统用一个pglist_data结构来描述整个内存布局
▪ pglist_data划分为zone
▪ node_states: https://github.com/torvalds/linux/blob/master/include/linux/nodemask.h

=== zone
https://github.com/torvalds/linux/blob/master/include/linux/mmzone.h
▪ 由于硬件的限制，需要把页划分成区

    ▪ 某些硬件只能通过某些特定的内存地址来执行直接内存访问
    ▪ 一些体系结构的内存物理寻址范围比虚拟寻址范围大，于是某些内存就不能永久地映射到内核空间上

▪ 不是所有体系结构都定义了全部区, 如X86-64没有ZONE_HIGHMEM
▪ zone_type: https://github.com/torvalds/linux/blob/master/include/linux/mmzone.h
▪ zone_names: https://github.com/torvalds/linux/blob/master/mm/page_alloc.c

Q: 如何理解高端内存?
A: https://www.zhihu.com/question/280526042

=== page
https://github.com/torvalds/linux/blob/master/include/linux/mm_types.h
https://github.com/torvalds/linux/blob/master/include/asm-generic/page.h
https://github.com/torvalds/linux/blob/master/include/linux/page-flags.h

=== vm_area_struct
https://github.com/torvalds/linux/blob/master/include/linux/mm_types.h

=== mm_struct
进程整个用户空间的抽象:  task_struct ◆――――――――> mm_struct ◆――――――――> vm_area_struct
https://github.com/torvalds/linux/blob/master/include/linux/mm_types.h
