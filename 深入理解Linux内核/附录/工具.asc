:toc:
:toclevels: 5
:hardbreaks-option:

== 工具

=== 源码

==== 离线
▪ linux: vim + gtags; vscode
▪ mac: understand; vscode
▪ windows: understand; vscode

==== 在线
▪ https://elixir.bootlin.com/linux/latest/source

    注意: elixir存在一些缺陷，例如
    常量字符串不能搜索到，例如swapper无法搜索到#define INIT_TASK_COMM "swapper"
    有时候会有些误报，例如ACCESS_ONCE会无中生有
    
    因此有些时候可以结合其它工具和命令，例如:
    find . -name "*.*" | xargs grep -rns 'abcde'

▪ https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/

=== 文档
▪ https://github.com/torvalds/linux/tree/master/Documentation
    
    github上看rst格式的文档比较友好

▪ https://docs.kernel.org/index.html

▪ API: https://docs.kernel.org/core-api/kernel-api.html

▪ https://www.kernel.org/doc/html/latest/

▪ https://lwn.net/
▪ https://lwn.net/Kernel/Index/

▪ https://lkml.org/

    邮件讨论与订阅

▪ https://lore.kernel.org/

    https://lwn.net/Articles/811528/

=== 书籍
▪ 早期内核:
《Linux内核完全剖析》0.12
《Linux内核设计的艺术》0.11

▪ 经典内核:
《Linux内核设计与实现》Linux Kernel Development, 3rd Edition(LKD) 2.6.34
《深入理解Linux内核》Understanding the Linux Kernel, 3rd Edition(ULK) 2.6.11
《深入Linux内核架构》Professional Linux Kernel Architecture(LKA) 2.6.24
《Linux内核源代码情景分析》2.4.0

▪ 专题:
《Understanding the Linux Virtual Memory Manager》2.4.22 https://www.kernel.org/doc/gorman/
《Linux内核源码剖析-TCP/IP实现》2.6.20
《深入理解Linux网络技术内幕》Understanding Linux Network Internals 2.2.x为基础，2.4.x，2.6.x中的新变化
《Linux设备驱动程序》第三版
《Embedded Linux Primer》
《Essential Linux Device Drivers》

=== 讲义/实验
https://students.mimuw.edu.pl/ZSO/index_en.html

=== 编译
编译选项: O2(默认)/Os
O2针对性能，Os针对大小
内核依赖O2/Os级别来优化，不要选择O0/O1/O3级别

[source, c]
.https://elixir.bootlin.com/linux/latest/source/init/Kconfig
----
choice
	prompt "Compiler optimization level"
	default CC_OPTIMIZE_FOR_PERFORMANCE

config CC_OPTIMIZE_FOR_PERFORMANCE
	bool "Optimize for performance (-O2)"
	help
	  This is the default optimization level for the kernel, building
	  with the "-O2" compiler flag for best performance and most
	  helpful compile-time warnings.

config CC_OPTIMIZE_FOR_SIZE
	bool "Optimize for size (-Os)"
	help
	  Choosing this option will pass "-Os" to your compiler resulting
	  in a smaller kernel.

endchoice
----

[source, c]
.https://elixir.bootlin.com/linux/latest/source/Makefile
----
    ifdef CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE
    KBUILD_CFLAGS += -O2
    else ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
    KBUILD_CFLAGS += -Os
    endif
----

since 5.7, 可以使用Clang/LLVM:
Support LLVM=1 environment variable to switch the default tools to Clang/LLVM
https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=a0d1c951ef08ed24f35129267e3595d86f57f5d3

=== 调试
▪ QEMU + gdb
▪ kgdb
▪ OpenOCD(Open On-Chip Debugger)
▪ https://zhuanlan.zhihu.com/p/34511018
▪ https://www.kernel.org/doc/html/latest/dev-tools/gdb-kernel-debugging.html
▪ https://blog.csdn.net/gatieme/article/details/68948080
▪ crash

=== 开发
https://www.kernel.org/doc/html/latest/dev-tools/index.html
https://lwn.net/Kernel/Index/#Development_model
https://lwn.net/Kernel/Index/#Development_tools

=== 配置
▪ https://cateee.net/lkddb/web-lkddb/

▪ 查看系统的kernel config:

    vi /boot/config-$(uname -r)
    查找: grep CONFIG_xyz /boot/config-$(uname -r)

▪ https://elixir.bootlin.com/linux/latest/source/lib/ Kconfig系列文件
    
=== 测试
==== 单元测试
https://kernel.org/doc/html/latest/dev-tools/kunit/index.html

==== 性能测试
▪ LTP

▪ stress
stress基于多进程，会fork多个进程，导致进程上下文切换，导致us开销很高；
sysbench基于多线程，会创建多个线程，单一进程基于内核线程切换，导致sy的内核开销很高；

▪ BCC

https://lwn.net/Kernel/Index/#Benchmarking

==== 回归测试
https://lwn.net/Kernel/Index/#Development_model-Regressions

=== 代码

==== 风格
https://www.kernel.org/doc/html/latest/process/coding-style.html
https://www.kernel.org/doc/html/v5.0/translations/zh_CN/coding-style.html
https://lwn.net/Kernel/Index/#Coding_style

=== pattern
https://lwn.net/Kernel/Index/#Development_model-Patterns

=== buglist
https://bugzilla.kernel.org/