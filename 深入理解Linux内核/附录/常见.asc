:toc:
:toclevels: 5
:hardbreaks-option:

== 常见

=== 常见宏

=== container_of
container_of(ptr, type, member)
offsetof宏: https://en.cppreference.com/w/c/types/offsetof

==== ALTERNATIVE
ALTERNATIVE, ALTERNATIVE_2
通过判断当前CPU是否支持某些feature来选择指令
https://elixir.bootlin.com/linux/latest/source/arch/x86/include/asm/alternative.h
https://elixir.bootlin.com/linux/latest/source/arch/arm64/include/asm/alternative-macros.h

==== DEFINE_MUTEX
[source, c]
.https://elixir.bootlin.com/linux/latest/source/include/linux/mutex.h
----
#define __MUTEX_INITIALIZER(lockname) \
		{ .owner = ATOMIC_LONG_INIT(0) \
		, .wait_lock = __RAW_SPIN_LOCK_UNLOCKED(lockname.wait_lock) \
		, .wait_list = LIST_HEAD_INIT(lockname.wait_list) \
		__DEBUG_MUTEX_INITIALIZER(lockname) \
		__DEP_MAP_MUTEX_INITIALIZER(lockname) }

#define DEFINE_MUTEX(mutexname) \
	struct mutex mutexname = __MUTEX_INITIALIZER(mutexname)
----

https://stackoverflow.com/questions/33932991/difference-between-mutex-init-and-define-mutex

==== MAX_NUMNODES

=== 常见函数