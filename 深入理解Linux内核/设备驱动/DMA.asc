:toc:
:toclevels: 5
:hardbreaks-option:

== DMA
DMA(直接内存访问)是一种硬件机制，它允许外设和内存之间直接传输I/O数据，不需要CPU的参与

DMA控制器:
向CPU发出系统HOLD信号，提出总线接管请求
当CPU发出允许接管信号后，负责对总线的控制，从而进入DMA方式
对存储器寻址及能修改地址指针，实现对内存的读写操作
发出DMA结束信号，CPU恢复正常工作状态

DMA信号:
DREQ: 外设向DMA控制器请求DMA操作的信号
DACK: DMA控制器向外设表示已收到请求和正进行处理的信号
HRQ:  DMA控制器向CPU发出的请求接管总线的信号
HLDA: CPU向DMA控制器发出的应答接管总线的信号

DMA操作可能导致Cache的不一致性问题
对于DMA缓冲, 应该使用dma_alloc_coherent()等方法申请
在DMA操作中涉及总线地址, 物理地址和虚拟地址等概念, 区分这几类地址非常重要

https://elixir.bootlin.com/linux/latest/source/include/linux/dma-mapping.h
https://elixir.bootlin.com/linux/latest/source/kernel/dma

参考: https://cloud.tencent.com/developer/article/1551283
