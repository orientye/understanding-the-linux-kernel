:toc:
:toclevels: 5
:hardbreaks-option:

== 相关系统调用

=== clone
https://elixir.bootlin.com/linux/latest/source/kernel/fork.c
clone
clone3
最终也是调用kernel_clone

=== exit
https://elixir.bootlin.com/linux/latest/source/kernel/exit.c
SYSCALL_DEFINE1(exit, int, error_code)
    do_exit()

=== fork
https://elixir.bootlin.com/linux/latest/source/kernel/fork.c
SYSCALL_DEFINE0(fork)
    kernel_clone()

=== schedule相关
https://elixir.bootlin.com/linux/latest/source/kernel/sched/core.c
SYSCALL_DEFINE XYZ

==== nanosleep
https://elixir.bootlin.com/linux/latest/source/kernel/time/hrtimer.c
SYSCALL_DEFINE2(nanosleep

=== set_tid_address
https://elixir.bootlin.com/linux/latest/source/kernel/fork.c
SYSCALL_DEFINE1(set_tid_address, int __user *, tidptr)

=== unshare
https://elixir.bootlin.com/linux/latest/source/kernel/fork.c
SYSCALL_DEFINE1(unshare, unsigned long, unshare_flags)

=== vfork
https://elixir.bootlin.com/linux/latest/source/kernel/fork.c
SYSCALL_DEFINE0(vfork)
    kernel_clone()